<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:local="clr-namespace:senia1._2.View.Styles">

    <ControlTemplate x:Key="ButtonRegistration2" TargetType="{x:Type Button}">
        <Grid>
            <Border
                CornerRadius="6.333"
                Background="{DynamicResource VioletBrush}"/>
            <Rectangle
                x:Name="rectangle"
                RadiusX="6.333"
                RadiusY="6.333"
                Width="256.196"
                Fill="{DynamicResource LightVioletBrush}"
                Opacity="0"/>
            <Label
                x:Name="label"
                Content="Зарегистрироваться" 
                HorizontalAlignment="Left" 
                Height="33.2"
                Margin="30.584,-1.201,0,0" 
                VerticalAlignment="Top" 
                Width="191.6" 
                Foreground="{DynamicResource BaseWhiteBrush}"
                FontFamily="{DynamicResource BaseFont}"
                Background="{x:Null}" 
                FontSize="{DynamicResource Big}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="rectangle" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="rectangle" Property="Opacity" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonExit1" TargetType="{x:Type Button}">
        <ContentControl
            Content="{DynamicResource ExitIcon}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonLogin" TargetType="{x:Type Button}">
        <Grid>
            <Border
                CornerRadius="6.333"
                Background="{DynamicResource BaseWhiteBrush}"/>
            <Rectangle
                x:Name="rectangle"
                RadiusX="6.333"
                RadiusY="6.333"
                Width="256.196"
                Fill="{DynamicResource LightVioletBrush}"
                Opacity="0"/>
            <Label
                x:Name="label"
                Content="Войти" 
                HorizontalAlignment="Center" 
                Height="33.2"
                VerticalAlignment="Center" 
                Width="191.6" 
                Foreground="{DynamicResource VioletBrush}"
                Background="{x:Null}" 
                FontSize="{DynamicResource Big}" 
                HorizontalContentAlignment="Center" 
                VerticalContentAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="rectangle" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="rectangle" Property="Opacity" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonRegistration1" TargetType="{x:Type Button}">
        <Grid>
            <TextBlock x:Name="textBlock" Margin="58,4" TextWrapping="Wrap" Text="Зарегистрироваться" Width="134" Height="19">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="White" Opacity="0.4"/>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
            <Trigger Property="IsMouseOver" Value="True" SourceName="textBlock">
                <Setter Property="Foreground" TargetName="textBlock">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.6"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RadioButtonMenu" TargetType="{x:Type RadioButton}">
        <Grid>
        <Rectangle x:Name="rectangle" RadiusY="0" RadiusX="0" Height="61" Width="277" Visibility="Hidden">
            <Rectangle.Fill>
                <SolidColorBrush Color="#FF5A3582" Opacity="0.2"/>
            </Rectangle.Fill>
            <Rectangle.Stroke>
                <SolidColorBrush Color="#FF8C36C7" Opacity="0.5"/>
            </Rectangle.Stroke>
        </Rectangle>
        <ContentPresenter/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="GroupName" Value=""/>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="rectangle" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="rectangle" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonControl" TargetType="{x:Type Button}">
        <ContentPresenter/>
    </ControlTemplate>

    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource VioletBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource VioletBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>