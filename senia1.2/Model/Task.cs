//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace senia1._2.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;

    public partial class Task
    {
        public int id { get; set; }
        public string Category { get; set; }
        public Nullable<bool> Completed { get; set; }
        public string Priority { get; set; }
        public Nullable<System.DateTime> DateExpected { get; set; }
        public string Value { get; set; }
        public Nullable<int> ListId { get; set; }
    
        public virtual List List { get; set; }

        public Task()
        {

        }

        public Task(string Value,string Category, Nullable<System.DateTime> DateExpected, Nullable<int> ListId)
        {
            value = Value ?? throw new ArgumentNullException(nameof(Value));
            category = Category ?? throw new ArgumentNullException(nameof(Category));
            dateEpected = DateExpected ?? throw new ArgumentNullException(nameof(DateExpected));
            listId = ListId ?? throw new ArgumentNullException(nameof(ListId));
        }

        public Task(string Value, string Category, Nullable<System.DateTime> DateExpected, Nullable<int> ListId, Nullable<bool> Completed, string Priority)
        {
            value = Value ?? throw new ArgumentNullException(nameof(Value));
            category = Category ?? throw new ArgumentNullException(nameof(Category));
            dateEpected = DateExpected ?? throw new ArgumentNullException(nameof(DateExpected));
            listId = ListId ?? throw new ArgumentNullException(nameof(ListId));
            completed = Completed ?? throw new ArgumentNullException(nameof(Completed));
            priority = Priority ?? throw new ArgumentNullException(nameof(Priority));
        }

        public string value
        {
            get { return Value; }
            set
            {
                Value = value;
                OnPropertyChanged("Value");
            }
        }

        public string priority
        {
            get { return Priority; }
            set
            {
                Priority = value;
                OnPropertyChanged("Priority");
            }
        }

        public string category
        {
            get { return Category; }
            set
            {
                Category = value;
                OnPropertyChanged("Category");
            }
        }

        public Nullable<bool> completed
        {
            get { return Completed; }
            set
            {
                Completed = value;
                OnPropertyChanged("Completed");
            }
        }

        public Nullable<System.DateTime> dateEpected
        {
            get { return DateExpected; }
            set
            {
                DateExpected = value;
                OnPropertyChanged("DateExpected");
            }
        }

        public Nullable<int> listId
        {
            get { return ListId; }
            set
            {
                ListId = value;
                OnPropertyChanged("ListId");
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        void OnPropertyChanged(string propertyName)
        {
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        public override string ToString()
        {
            return Value;
        }
    }
}
